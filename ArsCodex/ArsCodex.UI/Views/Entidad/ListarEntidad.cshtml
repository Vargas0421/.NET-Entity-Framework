@model IEnumerable<ArsCodex.Abstracciones.ModelosParaUI.EntidadDto>

@{
    ViewBag.Title = "ListarEntidad";
}

<div class="container-fluid px-4 mt-4">
    <h2 class="mb-4">Lista de Entidades</h2>

    <p>
        @Html.ActionLink("Registrar Entidad", "RegistrarEntidad", null, new { @class = "btn btn-primary" })
    </p>

    <div class="card shadow-lg">
        <div class="card-header bg-white">
            <i class="fas fa-table me-1"></i>
            Entidades registradas
        </div>
        <div class="card-body table-responsive">
            <table id="datatablesSimple" class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.codigoEntidad)</th>
                        <th>@Html.DisplayNameFor(model => model.nombreEntidad)</th>
                        <th>@Html.DisplayNameFor(model => model.fechaDeRegistro)</th>
                        <th>@Html.DisplayNameFor(model => model.NombreTipoEntidad)</th>
                        <th>@Html.DisplayNameFor(model => model.estado)</th>
                        <th class="text-center">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr data-id="@item.idEntidad">
                            <td>@item.codigoEntidad</td>
                            <td>@item.nombreEntidad</td>
                            <td>@item.fechaDeRegistro</td>
                            <td>@item.NombreTipoEntidad</td>
                            <td>
                                <span class="badge estado @(item.estado ? "bg-success" : "bg-danger")">
                                    @(item.estado ? "Activo" : "Inactivo")
                                </span>
                            </td>
                            <td class="text-center">
                                @Html.ActionLink("Editar", "EditarEntidad", new { id = item.idEntidad }, new { @class = "btn btn-sm btn-outline-primary" })
                                <button class="btn btn-sm btn-outline-warning toggleEstado ms-1">
                                    @(item.estado ? "Inactivar" : "Activar")
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section scripts{
    <script src="https://cdn.jsdelivr.net/npm/simple-datatables@7.1.2/dist/umd/simple-datatables.min.js"></script>
    <script>
        window.addEventListener('DOMContentLoaded', () => {
            const datatablesSimple = document.getElementById('datatablesSimple');
            if (datatablesSimple) {
                new simpleDatatables.DataTable(datatablesSimple);
            }

            // handler activar/inactivar
            document.querySelectorAll('.toggleEstado').forEach(btn => {
                btn.addEventListener('click', function () {
                    const fila = this.closest('tr');
                    const id = fila.getAttribute('data-id');

                    fetch('@Url.Action("ToggleEstadoEntidad","Entidad")', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ id: id })
                    })
                    .then(r => r.json())
                    .then(data => {
                        if (data.ok) {
                            // Actualizamos visualmente
                            const badge = fila.querySelector('.estado');
                            badge.textContent = data.nuevoEstadoTexto;
                            badge.className = 'badge estado ' + (data.nuevoEstadoBool ? 'bg-success' : 'bg-danger');

                            this.textContent = data.nuevoEstadoBool ? 'Inactivar' : 'Activar';
                        } else {
                            alert('Error: ' + (data.error || 'No se pudo cambiar el estado.'));
                        }
                    })
                    .catch(err => alert('Error inesperado: ' + err));
                });
            });
        });
    </script>
}
