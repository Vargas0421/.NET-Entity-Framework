@model ArsCodex.Abstracciones.ModelosParaUI.ContadoresDto

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container-fluid px-4 mt-4">
        <div class="card shadow-lg border-0 rounded-3">
            <div class="card-header bg-primary text-white d-flex align-items-center">
                <i class="fas fa-user-tie me-2"></i>
                <h5 class="mb-0">Gestión de Contador</h5>
            </div>
            <div class="card-body">
                @Html.HiddenFor(m => m.IdContador)
                @Html.HiddenFor(m => m.IdContadorIdentity)

                <div class="row mb-3">
                    <div class="col-md-6">
                        @Html.LabelFor(m => m.IdentificacionContador, new { @class = "form-label fw-bold" })
                        @Html.TextBoxFor(m => m.IdentificacionContador, new { @type = "number", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.IdentificacionContador, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6">
                        @Html.LabelFor(m => m.NumeroDeColegio, new { @class = "form-label fw-bold" })
                        @Html.TextBoxFor(m => m.NumeroDeColegio, new { @type = "number", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.NumeroDeColegio, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        @Html.LabelFor(m => m.NombreContador, new { @class = "form-label fw-bold" })
                        @Html.TextBoxFor(m => m.NombreContador, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.NombreContador, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6">
                        @Html.LabelFor(m => m.CorreoElectronico, new { @class = "form-label fw-bold" })
                        @Html.TextBoxFor(m => m.CorreoElectronico, new { @type = "email", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CorreoElectronico, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        @Html.LabelFor(m => m.PrimerApellidoContador, new { @class = "form-label fw-bold" })
                        @Html.TextBoxFor(m => m.PrimerApellidoContador, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.PrimerApellidoContador, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6">
                        @Html.LabelFor(m => m.SegundoApellidoContador, new { @class = "form-label fw-bold" })
                        @Html.TextBoxFor(m => m.SegundoApellidoContador, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.SegundoApellidoContador, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        @Html.LabelFor(m => m.TelefonoCelular, new { @class = "form-label fw-bold" })
                        @Html.TextBoxFor(m => m.TelefonoCelular, new { @type = "number", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.TelefonoCelular, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6">
                        @Html.LabelFor(m => m.TelefonoSecundario, new { @class = "form-label fw-bold" })
                        @Html.TextBoxFor(m => m.TelefonoSecundario, new { @type = "number", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.TelefonoSecundario, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.MetodoDeContacto, new { @class = "form-label fw-bold" })
                    @Html.DropDownListFor(m => m.MetodoDeContacto, (SelectList)ViewBag.ListaMetodos, "Seleccione un método", new { @class = "form-select" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.Estado, new { @class = "form-label fw-bold" })
                    <div class="form-check form-switch">
                        @Html.CheckBoxFor(m => m.Estado, new { @class = "form-check-input", id = "estadoSwitch" })
                        <span id="estadoTexto" class="badge @(Model.Estado ? "bg-success" : "bg-danger")">
                            @(Model.Estado ? "Activo" : "Inactivo")
                        </span>
                    </div>
                </div>

                @Html.HiddenFor(m => m.FechaDeRegistro)
                @Html.HiddenFor(m => m.FechaDeModificacion)

                <div class="d-flex justify-content-between mt-4">
                    <a href="@Url.Action("ListarContadores")" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> Volver
                    </a>
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-save"></i> Guardar
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const checkbox = document.getElementById("estadoSwitch");
            const badge = document.getElementById("estadoTexto");

            checkbox.addEventListener("change", function () {
                badge.textContent = checkbox.checked ? "Activo" : "Inactivo";
                badge.className = checkbox.checked ? "badge bg-success" : "badge bg-danger";
            });
        });
    </script>
}
