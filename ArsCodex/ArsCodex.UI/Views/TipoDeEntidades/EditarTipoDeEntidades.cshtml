@model ArsCodex.Abstracciones.ModelosParaUI.TipoDeEntidadesDto

@{
    ViewBag.Title = "Editar Tipo de Entidad";
}

<div class="container-fluid px-4 mt-4">
    <h2 class="mb-4">@ViewBag.Title</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(m => m.IdTipoEntidad)

        <div class="card shadow-lg">
            <div class="card-header bg-white">
                <i class="fas fa-edit me-1"></i> Datos del tipo de entidad
            </div>
            <div class="card-body">

                <div class="mb-3">
                    @Html.LabelFor(m => m.NombreTipoEntidad, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.NombreTipoEntidad, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.NombreTipoEntidad, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.Descripcion, new { @class = "form-label" })
                    @Html.TextAreaFor(m => m.Descripcion, new { @class = "form-control", rows = 3 })
                    @Html.ValidationMessageFor(m => m.Descripcion, "", new { @class = "text-danger" })
                </div>

                <div class="form-check mb-3">
                    @Html.CheckBoxFor(m => m.Estado, new { @class = "form-check-input", id = "checkEstado" })
                    @Html.LabelFor(m => m.Estado, new { @class = "form-check-label", @for = "checkEstado" })
                    @Html.ValidationMessageFor(m => m.Estado, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="card-footer text-end">
                <input type="submit" value="Guardar" class="btn btn-primary" />
                @Html.ActionLink("Regresar", "ListarTipoDeEntidades", "TipoDeEntidades", new { @class = "btn btn-outline-secondary ms-2" })
            </div>
        </div>
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
